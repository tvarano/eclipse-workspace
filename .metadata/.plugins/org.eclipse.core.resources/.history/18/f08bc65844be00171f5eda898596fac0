//Thomas Varano
//[Program Descripion]
//Oct 31, 2017

package information;

import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.io.IOException;

public class ErrorTransfer implements Transferable
{
   private String text;
   private Throwable throwObject;
   private String printMessage;
   private DataFlavor flavor; 
   
   public ErrorTransfer(String s, Throwable e) {
      setText(s);
      setThrowObject(e);
      
      flavor = new DataFlavor(Throwable.class, s);      
   }

   public String getText() {
      return text;
   }
   public void setText(String text) {
      this.text = text;
   }
   public Throwable getThrowObject() {
      return throwObject;
   }
   public void setThrowObject(Throwable throwObject) {
      this.throwObject = throwObject;
   }

   @Override
   public DataFlavor[] getTransferDataFlavors() {
      return new DataFlavor[] {DataFlavor.stringFlavor, flavor};
   }

   @Override
   public boolean isDataFlavorSupported(DataFlavor flavor) {
      if (flavor.equals(DataFlavor.stringFlavor))
         return true;
      if (flavor.equals(this.flavor))
         return true;
   }

   @Override
   public Object getTransferData(DataFlavor flavor)
         throws UnsupportedFlavorException, IOException {
      if (flavor.equals(DataFlavor.stringFlavor))
         return text;
      return null;
   }
}
